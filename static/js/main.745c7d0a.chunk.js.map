{"version":3,"sources":["components/Header.js","components/Footer.js","helpers/Wrapper.js","pages/Home.js","store/actions/asteroids.js","pages/Nearby_Asteroids.js","store/actions/apod.js","pages/Astronomy_Picture_Of_The_Day.js","pages/Submit_New_Planet.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","i18n.js","store/reducers/apod.js","store/reducers/asteroids.js","store/reducers/index.js","api.js","store/sagas/apod.js","store/sagas/asteroids.js","store/sagas/index.js","index.js"],"names":["Header","this","props","t","i18n","changeLanguage","lng","id","to","className","onClick","Component","withTranslation","Footer","Wrapper","children","Home","width","height","src","alt","ASTEROIDS_REQUEST","ASTEROIDS_SUCCESS","ASTEROIDS_FAIL","NearbyAsteroids","handleChangeStart","e","setState","startDate","target","value","handleChangeEnd","endDate","handleClick","actionsAsteroids","state","receivedData","result","_","values","asteroidsData","near_earth_objects","arr","i","length","j","element","name","absolute","absolute_magnitude_h","feet_min","estimated_diameter","feet","estimated_diameter_min","feet_max","estimated_diameter_max","potentially","meters_min","meters","meters_max","push","data","postData","slice","offset","perPage","map","pageCount","Math","ceil","handlePageClick","selectedPage","selected","currentPage","console","log","type","onChange","style","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","mapDispatchToProps","payload","AsteroidsContainer","connect","asteroids","APOD_REQUEST","APOD_SUCCESS","APOD_FAIL","AstronomyPictureOfTheDay","handleChange","date","actionsApod","apodData","title","explanation","url","ApodContainer","apod","SubmitNewPlanet","placeholder","disabled","App","exact","path","component","Nearby_Asteroids","Astronomy_Picture_Of_The_Day","Submit_New_Planet","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","initReactI18next","LanguageDetector","init","resources","en","translations","ru","am","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","initialState","combineReducers","action","API_KEY","getApod","a","fetch","response","json","getAsteroids","handleApodRequest","watchers","call","api","put","message","takeLatest","handleAsteroidsRequest","root","sagas","all","fork","saga","createSageMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","I18nextProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.745c7d0a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport { withTranslation, Trans } from 'react-i18next';\n\n\nclass Header extends Component {\n\n\n    render() {\n        const { t, i18n } = this.props;\n        const changeLanguage = (lng) => {\n            i18n.changeLanguage(lng);\n        };\n        return (\n            <div>\n                <h1>\n                    {t('NASA BROWSER')}\n                </h1>\n                <nav>\n                    <ul id=\"menu\">\n                        <li>\n                            <Link to=\"/\">\n                                {t('HOME')}\n                            </Link> <span>|</span>\n                        </li>\n                        <li>\n                            <Link to=\"/asteroids\">\n                                {t('NEARBY ASTEROIDS')}\n                            </Link> <span>|</span>\n                        </li>\n                        <li>\n                            <Link to=\"/apod\">\n                                {t('ASTRONOMY PICTURE OF THE DAY')}\n                            </Link> <span>|</span>\n                        </li>\n                        <li>\n                            <Link to=\"/submit-planet\">\n                                {t('SUBMIT NEW PLANET')}\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"lang-bar\">\n                        <li>\n                            <Link onClick={() => changeLanguage('en')}>EN</Link> <span>|</span>\n                        </li>\n                        <li>\n                            <Link onClick={() => changeLanguage('ru')}>РУ</Link> <span>|</span>\n                        </li>\n                        <li>\n                            <Link onClick={() => changeLanguage('am')}>ՀՅ</Link>\n                        </li>\n                    </ul>\n                </nav>\n\n\n            </div>\n        );\n    }\n}\n\n// export default Header;\nexport default withTranslation('translations')(Header);\n","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div>\n                <footer>\n                    © 2016\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nclass Wrapper extends Component {\n    render() {\n        return (\n            <div>\n                <Header />\n                {this.props.children}\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Wrapper;","import React, {Component} from 'react';\nimport Wrapper from \"../helpers/Wrapper\";\n\nimport Carousel from 'nuka-carousel';\n\nclass Home extends Component {\n    render() {\n        return (\n            <Wrapper>\n                <h1>Home</h1>\n                <Carousel\n                          width=\"100%\"\n                          height=\"450px\"\n                    >\n                    <img src=\"./images/sun.jpg\" alt=\"sun\"/>\n                    <img src=\"./images/mercury-4.jpg\" alt=\"mercury\"/>\n                    <img src=\"./images/venus.jpg\" alt=\"venus\"/>\n                    <img src=\"./images/earth.jpg\" alt=\"earth\"/>\n                    <img src=\"./images/mars.jpg\" alt=\"mars\"/>\n                    <img src=\"./images/jupiter.png\" alt=\"jupiter\"/>\n                    <img src=\"./images/saturn.jpg\" alt=\"saturn\"/>\n                    <img src=\"./images/uranus.jpg\" alt=\"uranus\"/>\n                    <img src=\"./images/neptun.jpg\" alt=\"neptun\"/>\n                </Carousel>\n            </Wrapper>\n        );\n    }\n}\n\nexport default Home;","export const ASTEROIDS_REQUEST = 'ASTEROIDS_REQUEST';\nexport const ASTEROIDS_SUCCESS = 'ASTEROIDS_SUCCESS';\nexport const ASTEROIDS_FAIL = 'ASTEROIDS_FAIL';\n\n\nexport function actionsAsteroids(startDate, endDate) {\n    console.log('action date ASTEROIDS', startDate, endDate)\n    return {\n        type: ASTEROIDS_REQUEST, payload: {startDate, endDate},\n    };\n}","import React, {Component} from 'react';\nimport Wrapper from \"../helpers/Wrapper\";\n\nimport '../styles/pagination.css';\nimport {actionsAsteroids} from \"../store/actions/asteroids\";\nimport {connect} from \"react-redux\";\n\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport ReactPaginate from \"react-paginate\";\n\n\n\nclass NearbyAsteroids extends Component {\n    static propTypes = {\n        actionsApod: PropTypes.func,\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            startDate: '',\n            endDate: '',\n            arr: [],\n\n\n\n            offset: 0,\n            data: [],\n            perPage: 3,\n            currentPage: 0\n        };\n    }\n\n    handleChangeStart = (e) => {\n        this.setState({\n            startDate: e.target.value,\n        });\n    }\n\n    handleChangeEnd = (e) => {\n        this.setState({\n            endDate: e.target.value,\n        });\n    }\n\n    handleClick = () => {\n        this.props.actionsAsteroids(this.state.startDate, this.state.endDate)\n    }\n\n\n\n    receivedData = () => {\n        const result = _.values(this.props.asteroidsData.near_earth_objects);\n        let arr = [];\n        for (let i = 0; i < result.length; i++) {\n\n            for (let j = 0; j < result[i].length; j++) {\n                const element = {}\n                element.name = result[i][j].name;\n                element.absolute = result[i][j].absolute_magnitude_h;\n                element.feet_min = result[i][j].estimated_diameter.feet.estimated_diameter_min;\n                element.feet_max = result[i][j].estimated_diameter.feet.estimated_diameter_max;\n                element.potentially\t = 'No';\n                element.meters_min = result[i][j].estimated_diameter.meters.estimated_diameter_max;\n                element.meters_max = result[i][j].estimated_diameter.meters.estimated_diameter_max;\n                arr.push(element);\n           }\n        }\n\n                const data = arr;\n                const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n                const postData = slice.map(data => <>\n                    {/*<p>{pd.name}</p>*/}\n                    <tr key={data.meters_min}>\n                        <td>{data.name}</td>\n                        <td>{data.feet_min} -\n                            {data.feet_max}</td>\n                        <td>{data.absolute}</td>\n                        <td>{data.potentially}</td>\n                        <td>{data.meters_min} -\n                            {data.meters_max}</td>\n                    </tr>\n                </>)\n\n                this.setState({\n                    pageCount: Math.ceil(data.length / this.state.perPage),\n\n                    postData\n                })\n    }\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.receivedData()\n        });\n\n    };\n\n    componentDidMount() {\n        this.receivedData()\n    }\n\n\n\n\n    render() {\n\n        console.log(11111111, this.state.postData)\n        // console.log('this.props.asteroidsData', this.props.asteroidsData.near_earth_objects)\n        // console.log('obj obj obj obj obj', Object.assign({}, this.props.asteroidsData.near_earth_objects))\n        return (\n            <Wrapper>\n                <p>Search for Asteroids based on their closest approach date to Earth</p>\n                <input className='input_date' type=\"date\" id=\"start\" name=\"trip-start\"\n                       value=\"\" onChange={this.handleChangeStart}/>\n\n                <input className='input_date' type=\"date\" id=\"start\" name=\"trip-start\"\n                       value=\"\" onChange={this.handleChangeEnd}/>\n\n                <button className='button_go' onClick={this.handleClick}>Go</button>\n\n\n                <table id='asteroids_table' style={{width: \"100%\"}}>\n                    <thead>\n                    <tr>\n\n                        <th>\n                            Title\n                        </th>\n                        <th>\n                            Distance (km)\n\n                        </th>\n                        <th>\n                            Absolute Magnitude\n\n                        </th>\n                        <th>\n                            Is potentially hazardous\n\n                        </th>\n                        <th>\n                            Diameter (meters)\n\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody id=\"pagination\">\n                    {this.state.postData}\n                    </tbody>\n                </table>\n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n\n            </Wrapper>\n        );\n    }\n}\n\n// export default NearbyAsteroids;\nconst mapStateToProps = (state) => ({\n    asteroidsData: state.asteroids.asteroidsData,\n});\n\nconst mapDispatchToProps = {\n    actionsAsteroids,\n};\nconst AsteroidsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NearbyAsteroids);\n\nexport default AsteroidsContainer;","export const APOD_REQUEST = 'APOD_REQUEST';\nexport const APOD_SUCCESS = 'APOD_SUCCESS';\nexport const APOD_FAIL = 'APOD_FAIL';\n\n\nexport function actionsApod(date) {\n    return {\n        type: APOD_REQUEST, payload: {date},\n    };\n}","import React, {Component} from 'react';\nimport Wrapper from \"../helpers/Wrapper\";\nimport Carousel from \"nuka-carousel\";\nimport {connect} from \"react-redux\";\nimport {actionsApod} from \"../store/actions/apod\";\nimport PropTypes from 'prop-types';\n\nclass AstronomyPictureOfTheDay extends Component {\n    static propTypes = {\n        actionsApod: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.actionsApod()\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            date: e.target.value,\n        });\n    }\n\n    handleClick = () => {\n        this.props.actionsApod(this.state.date)\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <p>Each day a different image or photograph of our fascinating universe is featured, along with a\n                    brief explanation written by a professional astronomer.</p>\n                <input className='input_date' type=\"date\" id=\"start\" name=\"trip-start\"\n                       value=\"\"\n                       onChange={this.handleChange}/>\n\n                <button onClick={this.handleClick} className='button_go'>Go</button>\n\n                <div id='apod_info'>\n                    <h5>{this.props.apodData.title}</h5>\n                    <p>{this.props.apodData.explanation}</p>\n                    <img src={this.props.apodData.url}/>\n                </div>\n\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    apodData: state.apod.apodData,\n});\n\nconst mapDispatchToProps = {\n    actionsApod,\n};\nconst ApodContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AstronomyPictureOfTheDay);\n\nexport default ApodContainer;\n\n\n","import React, {Component} from 'react';\nimport Wrapper from \"../helpers/Wrapper\";\n\nclass SubmitNewPlanet extends Component {\n    render() {\n        return (\n            <Wrapper>\n                <div id=\"submit_new_planet\">\n                    <p>If you found new planet you can add it to our directory (Reactive forms demo)</p>\n\n\n                    <form>\n                        <div>\n                            <input placeholder=\"Planet Name\" type=\"text\"/>\n                            <select>\n                                <option disabled=\"\" selected=\"\">\n                                    Galaxy name\n                                </option>\n                                <option value=\"Milky Way\">\n                                    Milky Way\n                                </option>\n                                <option value=\"Messier 83\">\n                                    Messier 83\n                                </option>\n                                <option value=\"Black Eye Galaxy\">\n                                    Black Eye Galaxy\n                                </option>\n                                <option value=\"Pinwheel\">\n                                    Pinwheel\n                                </option>\n                                <option value=\"Canis Major Dwarf\">\n                                    Canis Major Dwarf\n                                </option>\n                                <option value=\"Somewhere else...\">\n                                    Somewhere else...\n                                </option>\n                            </select>\n                            <input placeholder=\"Diameter (km)\" type=\"number\"/>\n                            <input placeholder=\"Distance (mln km)\" type=\"number\"/>\n\n                        </div>\n                        <div>\n                            <input placeholder=\"Your name\"/>\n\n                            <input placeholder=\"Your email\"/>\n\n                        </div>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nexport default SubmitNewPlanet;","import React, {Component} from 'react';\nimport {BrowserRouter, HashRouter, Route, Switch} from 'react-router-dom';\nimport Home from \"./pages/Home\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Nearby_Asteroids from \"./pages/Nearby_Asteroids\";\nimport Astronomy_Picture_Of_The_Day from \"./pages/Astronomy_Picture_Of_The_Day\";\nimport Submit_New_Planet from \"./pages/Submit_New_Planet\";\n\n\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <HashRouter>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route path=\"/header\" component={Header}/>\n                        <Route path=\"/footer\" component={Footer}/>\n                        <Route path=\"/asteroids\" component={Nearby_Asteroids}/>\n                        <Route path=\"/apod\" component={Astronomy_Picture_Of_The_Day}/>\n                        <Route path=\"/submit-planet\" component={Submit_New_Planet}/>\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n\n    .use(initReactI18next)\n    .use(LanguageDetector)\n    .init({\n        // we init with resources\n        resources: {\n            en: {\n                translations: {\n                    'NASA BROWSER': 'NASA BROWSER',\n                    'HOME': 'HOME',\n                    'NEARBY ASTEROIDS': 'NEARBY ASTEROIDS',\n                    'ASTRONOMY PICTURE OF THE DAY': 'ASTRONOMY PICTURE OF THE DAY',\n                    'SUBMIT NEW PLANET': 'SUBMIT NEW PLANET',\n                }\n            },\n            ru: {\n                translations: {\n                    'NASA BROWSER': 'НАСА БРАУЗЕР',\n                    'HOME': 'ГЛАВНАЯ',\n                    'NEARBY ASTEROIDS': 'БЛИЖАЙШИЕ АСТЕРОИДЫ',\n                    'ASTRONOMY PICTURE OF THE DAY': 'АСТРОНОМИЧЕСКАЯ КАРТИНКА ДНЯ',\n                    'SUBMIT NEW PLANET': 'ДОБАВИТЬ НОВУЮ ПЛАНЕТУ',\n                }\n            },\n            am: {\n                translations: {\n                    'NASA BROWSER': 'Նանսայի զննաեկիչ',\n                    'HOME': 'ԳԼԽԱՎՈՐ',\n                    'NEARBY ASTEROIDS': 'ՄՈՏԱԿԱ ԱՍՏԵՐՈԻԴՆԵՐԸ',\n                    'ASTRONOMY PICTURE OF THE DAY': 'ԱՍՏՂԱԳԻՏՈՒԹՅՈՒՆ - ՕՐՎԱ ՆԿԱՐ',\n                    'SUBMIT NEW PLANET': 'ԱՎԵԼԱՑՆԵԼ ՆՈՐ ՄՈԼՈՐԱԿ',\n                }\n            }\n        },\n        fallbackLng: 'en',\n        debug: true,\n        // have a common namespace used around the full app\n        ns: ['translations'],\n        defaultNS: 'translations',\n        keySeparator: false, // we use content as keys\n        interpolation: {\n            escapeValue: false, // not needed for react!!\n            formatSeparator: ','\n        },\n        react: {\n            wait: true\n        }\n    });\nexport default i18n;","import {APOD_REQUEST, APOD_SUCCESS, APOD_FAIL} from '../actions/apod';\n\nconst initialState = {\n    apodData: [],\n\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case APOD_REQUEST: {\n            return {...state,\n            };\n        }\n        case APOD_SUCCESS: {\n            return {\n                ...state,\n                apodData: action.payload.apodData\n            };\n        }\n        case APOD_FAIL: {\n            return {...state};\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\n\n","import {ASTEROIDS_REQUEST, ASTEROIDS_SUCCESS, ASTEROIDS_FAIL} from '../actions/asteroids';\n\nconst initialState = {\n    asteroidsData: [],\n\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case ASTEROIDS_REQUEST: {\n            return {...state,\n            };\n        }\n        case ASTEROIDS_SUCCESS: {\n            return {\n                ...state,\n                asteroidsData: action.payload.asteroidsData\n            };\n        }\n        case ASTEROIDS_FAIL: {\n            return {...state};\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\n\n","import {combineReducers} from 'redux'\nimport apod from './apod';\nimport asteroids from './asteroids';\n\nexport default combineReducers({\n    apod,\n    asteroids,\n});","const API_KEY = \"vsOioM79hYpi8fMRm0Bs5kwcffjwKdzXYc5LqwCs\"\n\n\n\nexport const getApod = async (date) => {\n    try {\n        const response = await fetch(`https://api.nasa.gov/planetary/apod?date=${date}&api_key=${API_KEY}`);\n        const data = await response.json();\n        return data;\n    } catch (e) {\n        console.log(e)\n    }\n};\n\n\nexport const getAsteroids= async (startDate, endDate) => {\n    try {\n        const response = await fetch(`https://api.nasa.gov/neo/rest/v1/feed?start_date=${startDate}&end_date=${endDate}&api_key=${API_KEY}`);\n        const data = await response.json();\n        return data;\n    } catch (e) {\n        console.log(e)\n    }\n};\n\n\n","import {takeLatest, call, put} from 'redux-saga/effects';\nimport {APOD_REQUEST, APOD_SUCCESS, APOD_FAIL} from '../actions/apod';\nimport * as api from '../../api';\n\nfunction* handleApodRequest(action) {\n    try {\n        const data = yield call(api.getApod, action.payload.date);\n        yield put({\n            type: APOD_SUCCESS,\n            payload: {apodData: data},\n        });\n    } catch (e) {\n        console.log(e);\n        yield put({\n            type: APOD_FAIL,\n            message: e.message,\n        });\n    }\n}\n\n\nexport default function* watchers() {\n    yield takeLatest(APOD_REQUEST, handleApodRequest);\n}","import {takeLatest, call, put} from 'redux-saga/effects';\nimport {ASTEROIDS_REQUEST, ASTEROIDS_SUCCESS, ASTEROIDS_FAIL} from '../actions/asteroids';\nimport * as api from '../../api';\n\nfunction* handleAsteroidsRequest(action) {\n    try {\n        const data = yield call(api.getAsteroids, action.payload.startDate, action.payload.endDate);\n        yield put({\n            type: ASTEROIDS_SUCCESS,\n            payload: {asteroidsData: data},\n        });\n    } catch (e) {\n        console.log(e);\n        yield put({\n            type: ASTEROIDS_FAIL,\n            message: e.message,\n        });\n    }\n}\n\n\nexport default function* watchers() {\n    yield takeLatest(ASTEROIDS_REQUEST, handleAsteroidsRequest);\n}","import { all, fork } from \"redux-saga/effects\";\nimport apod from \"./apod\";\nimport asteroids from \"./asteroids\";\n\nexport default function* root() {\n    const sagas = [\n        apod,\n        asteroids,\n    ];\n    yield all(sagas.map(fork));\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './i18n';\n\n\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport reducers from './store/reducers'\nimport watchers from './store/sagas'\nimport createSageMiddleware from 'redux-saga'\n\n\nconst saga = createSageMiddleware();\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(saga)\n);\n\nsaga.run(watchers);\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <I18nextProvider i18n={i18n}>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </I18nextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}